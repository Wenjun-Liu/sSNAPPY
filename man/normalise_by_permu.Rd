% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normaliseByPermutation.R
\name{normalise_by_permu}
\alias{normalise_by_permu}
\title{Normalise test perturbation scores by permutation}
\usage{
normalise_by_permu(permutedScore, testScore, pAdj_method = "fdr")
}
\arguments{
\item{permutedScore}{A list. Output of \code{generate_permuted_scores}}

\item{testScore}{A matrix. Output of \code{weight_ss_fc}}

\item{pAdj_method}{Method for adjusting p-values for multiple comparisons. See \code{?p.adjust} for methods available. Default to FDR.}
}
\value{
A dataframe.
}
\description{
Normalise test perturbation scores by permutation
}
\details{
Normalise the test perturbation scores generated by \code{weight_ss_fc} through the permuted perturbation scores derived from
the \code{generate_permuted_scores} function. The mean absolute deviation(MAD) and median of perturbation scores for each pathway are firstly
derived from the permuted perturbation scores. The test perturbation scores are then converted to robust z-scores using MADs and medians
calculated.
}
\examples{
\donttest{
load(system.file("extdata", "gsTopology.rda", package = "sSNAPPY"))
data(metadata_example)
data(logCPM_example)
ls <- weight_ss_fc(logCPM_example, metadata = metadata_example,
factor = "patient", control = "Vehicle")
# compute raw gene-wise perturbation scores
genePertScore <- raw_gene_pert(ls$logFC, gsTopology)
# sum gene-wise perturbation scores to derive the pathway-level single-sample perturbation scores
pathwayPertScore <- pathway_pert(genePertScore)
permutedScore <- generate_permuted_scores(logCPM_example, numOfTreat = 3,
 NB = 5, gsTopology = gsTopology, weight = ls$weight)
normalisedScores <- normalise_by_permu(permutedScore, pathwayPertScore)
 }
 # Load the example output
 load(system.file("extdata", "normalisedScores.rda", package = "sSNAPPY"))
 normalisedScores
}
