% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normaliseByPermutation.R
\name{normaliseByPermutation}
\alias{normaliseByPermutation}
\title{Title Normalise test perturbation scores by permutation}
\usage{
normaliseByPermutation(permutedScore, testScore)
}
\arguments{
\item{permutedScore}{A list. Output of \code{generate_PermutedScore}}

\item{testScore}{A matrix. Output of \code{weight_ssFC}}
}
\value{
A dataframe.
}
\description{
Title Normalise test perturbation scores by permutation
}
\details{
Normalise the test perturbation scores generated by \code{weight_ssFC} through the permuted perturbation scores derived from
the \code{generate_PermutedScore} function. The mean absolute deviation(MAD) and median of perturbation scores for each pathway are firstly
derived from the permuted perturbation scores. The test perturbation scores are then converted to robust z-scores using MADs and medians
calculated.
}
\examples{
require(AnnotationHub)
# convert rownamews of logCPM from gene ids to gene entrez IDs through `AnnotationHub`
ah <- AnnotationHub()
ah <- subset(ah,genome == "GRCh38" & title == "Ensembl 101 EnsDb for Homo sapiens")
ensDb <- ah[[1]]
rownames(logCPM_example) <- mapIds(ensDb, rownames(logCPM_example), "ENTREZID", keytype = "GENEID")

# Remove genes that couldn't be matched to entrez IDs
logCPM_example <- logCPM_example[!is.na(rownames(logCPM_example)),]

#compute weighted single sample logFCs
ls <- weight_ssFC(logCPM_example, metadata = metadata_example, factor = "patient", control = "Vehicle")

# explore all species and databases supported by graphite
graphite::pathwayDatabases()
weightedAdjMatrix(species = "hsapiens", database = "kegg", outputDir = "BminsI.rds")

# compute test perturbation scores
ssPertScore <- perturbationScore(ls$logFC, filePath = "BminsI.rds")
# generate permuted perturbation scores
permutedScore <- generate_PermutedScore(logCPM_example, numOfTreat = 2, NB = 100, filePath = "BminsI.rds", weight = ls$weight)
normalisedScores <- normaliseByPermutation(permutedScore, ssPertScore)
}
