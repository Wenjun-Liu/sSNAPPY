% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normaliseByPermutation.R
\name{generate_PermutedScore}
\alias{generate_PermutedScore}
\title{Title Simulate permuted perturbation scores}
\usage{
generate_PermutedScore(logCPM, numOfTreat, NB = 1000, filePath, weight)
}
\arguments{
\item{logCPM}{Matrix of normaslised logCPM where rows are genes and columns are samples. Row names need to be gene entrez IDs.}

\item{numOfTreat}{Number of treatments (including control)}

\item{NB}{Number of permutations}

\item{filePath}{The file path to pathway topology matrices generated using function \code{weightedAdjMatrix}}

\item{weight}{A vector of gene-wise weights derived from function \code{weight_ssFC}}
}
\value{
A list where each element is a vector of perturbation scores for a pathway.
}
\description{
Simulate null distributions of perturbation scores for each pathway through sample permutation.
}
\details{
This function firstly randomly permute sample labels NB times to generate permuted logFCs, which are then used to compute permuted perturbation
scores for each pathway. The function outputs a list that is of the same length as the list storing pathway topology matrices. Each
element of the output list is for a pathway and contains a vector of permuted perturbation score of length NB. It's assumed that the
permuted perturbation scores can be used to estimate the null distributions of perturbation scores.

The input logCPM matrix should be identical to the input used for \code{weight_ssFC} function. If the requested number of permutation (NB) is larger than the maximum number of permutations possible, NB will be set to the largest
number of permutations possible instead.
}
\examples{
require(AnnotationHub)
require(“ensembldb”)
# convert rownamews of logCPM from gene ids to gene entrez IDs through `AnnotationHub`
ah <- AnnotationHub()
ah <- subset(ah,genome == "GRCh38" & title == "Ensembl 101 EnsDb for Homo sapiens")
ensDb <- ah[[1]]
rownames(logCPM_example) <- mapIds(ensDb, rownames(logCPM_example), "ENTREZID", keytype = "GENEID")

# Remove genes that couldn't be matched to entrez IDs
logCPM_example <- logCPM_example[!is.na(rownames(logCPM_example)),]

#compute weighted single sample logFCs
ls <- weight_ssFC(logCPM_example, metadata = metadata_example, factor = "patient", control = "Vehicle")

# explore all species and databases supported by graphite
graphite::pathwayDatabases()
weightedAdjMatrix(species = "hsapiens", database = "kegg", outputDir = "BminsI.rds")

permutedScore <- generate_PermutedScore(logCPM_example, numOfTreat = 2, NB = 100, filePath = "BminsI.rds", weight = ls$weight)
}
