% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_ssFC.R
\name{weight_ss_fc}
\alias{weight_ss_fc}
\alias{weight_ss_fc,matrix-method}
\alias{weight_ss_fc,data.frame-method}
\alias{weight_ss_fc,DGEList-method}
\alias{weight_ss_fc,SummarizedExperiment-method}
\title{Compute weighted single sample LogFCs from normalised logCPM}
\usage{
weight_ss_fc(expreMatrix, metadata = NULL, factor, control)

\S4method{weight_ss_fc}{matrix}(expreMatrix, metadata = NULL, factor, control)

\S4method{weight_ss_fc}{data.frame}(expreMatrix, metadata = NULL, factor, control)

\S4method{weight_ss_fc}{DGEList}(expreMatrix, metadata = NULL, factor, control)

\S4method{weight_ss_fc}{SummarizedExperiment}(expreMatrix, metadata = NULL, factor, control)
}
\arguments{
\item{expreMatrix}{\code{matrix} and \code{data.frame} of logCPM, or \code{DGEList}/\code{SummarizedExperiment}
storing gene expression counts and sample metadata. Feature names need to be in entrez IDs,
and column names need to be sample names}

\item{metadata}{Sample metadata \code{data.frame} as described in the details section.}

\item{factor}{\code{character} Factor defines how samples can be put into matching pairs (eg. patient).}

\item{control}{\code{character} Treatment level that is the control.}
}
\value{
A list with two elements:
$weight  gene-wise weights;
$logFC weighted single sample logFC matrix
}
\description{
Compute weighted single sample logFCs for each treated samples
using normalised logCPM values. Fit a lowess curve on variances of single
sample logFCs ~ mean of logCPM, and use it to predict a gene-wise weight.
The weighted single sample logFCs are ready to be used for computing
perturbation scores.
}
\details{
This function computes weighted single-sample logFCs from normalised logCPM
values, used for computing single-sample perturbation scores.

Since genes with smaller logCPM turn to have larger variances among single
sample logFCs.A lowess curve will be fitted to estimate the relationship
between variances of single-sample logFCs and mean of logCPM, and the relationship
will be used to estimate the variance of each mean logCPM value. Gene-wise weights,
which are inverse of variances, will then be multiplied to single-sample logFCs to
down-weight genes with low counts.

It is assumed that the genes with extremely low counts have been removed and the
count matrix has been normalised prior to the logCPM matrix was derived. Row names
of the matrix must be genes' entrez IDs.

If a S4 object of \code{DGEList or SummarizedExperiment} is provided as input
to \code{expreMatrix}, the gene expression matrix will be extracted from it and converted
to a logCPM matrix. Sample metadata will also be extracted from the same S4 object
unless otherwise specified.

Provided sample metadata should have the same number of rows as the number of columns
in the logCPM matrix. Metadata also must have a column called "sample" storing
sample names (column names of logCPM matrix), and a column called "treatment"
storing treatment of each sample.The control treatment level specified by the \code{control}
parameter must exist in the treatment column.

This analysis was designed for experimental designs involving matched pairs of
samples, such as when tissues collected from the same patient were treated with
different treatments to study different treatment effects. Parameter \code{factor} tells
the function how samples can be put into matching pairs. It must also be included as
a column in the metadata.
}
\examples{
# Inspect metadata data frame to make sure it has treatment, sample and patient columns
data(metadata_example)
data(logCPM_example)
length(setdiff(colnames(logCPM_example), metadata_example$sample)) == 0
ls <- weight_ss_fc(logCPM_example, metadata = metadata_example,
 factor = "patient", control = "Vehicle")
}
