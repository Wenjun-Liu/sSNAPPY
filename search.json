[{"path":"https://wenjun-liu.github.io/SSPT/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 SSPT authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://wenjun-liu.github.io/SSPT/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Wenjun Liu. Author, maintainer.","code":""},{"path":"https://wenjun-liu.github.io/SSPT/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Liu W (2022). SSPT: Single Sample Pathway Perturbation Testing RNA-seq. R package version 0.0.0.9000, https://wenjun-liu.github.io/SSPT/.","code":"@Manual{,   title = {SSPT: Single Sample Pathway Perturbation Testing for RNA-seq},   author = {Wenjun Liu},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://wenjun-liu.github.io/SSPT/}, }"},{"path":[]},{"path":[]},{"path":"https://wenjun-liu.github.io/SSPT/reference/SSPT.html","id":null,"dir":"Reference","previous_headings":"","what":"SSPT: A package for testing single sample pathway perturbation — SSPT","title":"SSPT: A package for testing single sample pathway perturbation — SSPT","text":"package testing single sample pathway perturbation","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/dot-compute_ssFC.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute single sample logFCs — .compute_ssFC","title":"Compute single sample logFCs — .compute_ssFC","text":"Compute single sample logFCs","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/dot-compute_ssFC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute single sample logFCs — .compute_ssFC","text":"","code":".compute_ssFC(logCPM, metadata, factor, control)"},{"path":"https://wenjun-liu.github.io/SSPT/reference/dot-compute_ssFC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute single sample logFCs — .compute_ssFC","text":"logCPM Matrix normaslised logCPM metadata Sample metadata data frame described details section. factor factor defines samples can put matching pairs. control treatment level control.","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/dot-compute_ssFC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute single sample logFCs — .compute_ssFC","text":"matrix single sample logFC","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/generate_PermutedScore.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate permuted perturbation scores — generate_PermutedScore","title":"Simulate permuted perturbation scores — generate_PermutedScore","text":"Simulate null distributions perturbation scores pathway sample permutation.","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/generate_PermutedScore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate permuted perturbation scores — generate_PermutedScore","text":"","code":"generate_PermutedScore(logCPM, numOfTreat, NB = 1000, filePath, weight)"},{"path":"https://wenjun-liu.github.io/SSPT/reference/generate_PermutedScore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate permuted perturbation scores — generate_PermutedScore","text":"logCPM Matrix normaslised logCPM rows genes columns samples. Row names need gene entrez IDs. numOfTreat Number treatments (including control) NB Number permutations filePath file path pathway topology matrices generated using function weightedAdjMatrix weight vector gene-wise weights derived function weight_ssFC","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/generate_PermutedScore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate permuted perturbation scores — generate_PermutedScore","text":"list element vector perturbation scores pathway.","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/generate_PermutedScore.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate permuted perturbation scores — generate_PermutedScore","text":"function firstly randomly permute sample labels NB times generate permuted logFCs, used compute permuted perturbation scores pathway. function outputs list length list storing pathway topology matrices. element output list pathway contains vector permuted perturbation score length NB. assumed permuted perturbation scores can used estimate null distributions perturbation scores. input logCPM matrix identical input used weight_ssFC function. requested number permutation (NB) larger maximum number permutations possible, NB set largest number permutations possible instead.","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/generate_PermutedScore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate permuted perturbation scores — generate_PermutedScore","text":"","code":"require(AnnotationHub) #> Loading required package: AnnotationHub #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table, #>     tapply, union, unique, unsplit, which.max, which.min #> Loading required package: BiocFileCache #> Loading required package: dbplyr require(ensembldb) #> Loading required package: ensembldb #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: S4Vectors #>  #> Attaching package: ‘S4Vectors’ #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: GenomicFeatures #> Loading required package: AnnotationDbi #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: ‘Biobase’ #> The following object is masked from ‘package:AnnotationHub’: #>  #>     cache #> Loading required package: AnnotationFilter #>  #> Attaching package: 'ensembldb' #> The following object is masked from 'package:stats': #>  #>     filter # convert rownamews of logCPM from gene ids to gene entrez IDs through `AnnotationHub` ah <- AnnotationHub() #> snapshotDate(): 2021-10-20 ah <- subset(ah,genome == \"GRCh38\" & title == \"Ensembl 101 EnsDb for Homo sapiens\") ensDb <- ah[[1]] #> downloading 1 resources #> retrieving 1 resource #> loading from cache rownames(logCPM_example) <- mapIds(ensDb, rownames(logCPM_example), \"ENTREZID\", keytype = \"GENEID\") #> Warning: Unable to map 3137 of 18481 requested IDs.  # Remove genes that couldn't be matched to entrez IDs logCPM_example <- logCPM_example[!is.na(rownames(logCPM_example)),]  #compute weighted single sample logFCs ls <- weight_ssFC(logCPM_example, metadata = metadata_example,  factor = \"patient\", control = \"Vehicle\")  # explore all species and databases supported by graphite graphite::pathwayDatabases() #>          species     database #> 1      athaliana         kegg #> 2      athaliana     pathbank #> 3      athaliana wikipathways #> 4        btaurus         kegg #> 5        btaurus     pathbank #> 6        btaurus     reactome #> 7        btaurus wikipathways #> 8       celegans         kegg #> 9       celegans     pathbank #> 10      celegans     reactome #> 11      celegans wikipathways #> 12   cfamiliaris         kegg #> 13   cfamiliaris     reactome #> 14   cfamiliaris wikipathways #> 15 dmelanogaster         kegg #> 16 dmelanogaster     pathbank #> 17 dmelanogaster     reactome #> 18 dmelanogaster wikipathways #> 19        drerio         kegg #> 20        drerio     reactome #> 21        drerio wikipathways #> 22         ecoli         kegg #> 23         ecoli     pathbank #> 24         ecoli wikipathways #> 25       ggallus         kegg #> 26       ggallus     reactome #> 27       ggallus wikipathways #> 28      hsapiens         kegg #> 29      hsapiens      panther #> 30      hsapiens     pathbank #> 31      hsapiens     pharmgkb #> 32      hsapiens     reactome #> 33      hsapiens        smpdb #> 34      hsapiens wikipathways #> 35     mmusculus         kegg #> 36     mmusculus     pathbank #> 37     mmusculus     reactome #> 38     mmusculus wikipathways #> 39   rnorvegicus         kegg #> 40   rnorvegicus     pathbank #> 41   rnorvegicus     reactome #> 42   rnorvegicus wikipathways #> 43   scerevisiae         kegg #> 44   scerevisiae     pathbank #> 45   scerevisiae     reactome #> 46   scerevisiae wikipathways #> 47       sscrofa         kegg #> 48       sscrofa     reactome #> 49       sscrofa wikipathways #> 50       xlaevis         kegg weightedAdjMatrix(species = \"hsapiens\", database = \"kegg\", outputDir = \"BminsI.rda\")  permutedScore <- generate_PermutedScore(logCPM_example, numOfTreat = 2,  NB = 100, filePath = \"BminsI.rda\", weight = ls$weight)"},{"path":"https://wenjun-liu.github.io/SSPT/reference/logCPM_example.html","id":null,"dir":"Reference","previous_headings":"","what":"logCPM_example: Normalised logCPM of malignant breast cancer tumors PDE from 8 ER+PR+ breast cancer patients (GSE80098) — logCPM_example","title":"logCPM_example: Normalised logCPM of malignant breast cancer tumors PDE from 8 ER+PR+ breast cancer patients (GSE80098) — logCPM_example","text":"data adopted study Singhal H, et al., published Genomic agonism phenotypic antagonism estrogen progesterone receptors breast cancer 2016. study, 12 primary malignant breast tissues (8PR+ 4 PR-) developed patient-derived explants treated Vehicle, E2, E2+R5020, R5020 24 48 hrs. Raw data Vehicle- E2-treated samples 8 ER+PR+ patients retrieved GEO (GSE80098) pre-processed raw count, filtered remove undetectable genes normalised using conditional quantile normalisation offset systematic biases introduced artefacts, gene length GC contents.","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/logCPM_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"logCPM_example: Normalised logCPM of malignant breast cancer tumors PDE from 8 ER+PR+ breast cancer patients (GSE80098) — logCPM_example","text":"","code":"logCPM_example"},{"path":"https://wenjun-liu.github.io/SSPT/reference/logCPM_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"logCPM_example: Normalised logCPM of malignant breast cancer tumors PDE from 8 ER+PR+ breast cancer patients (GSE80098) — logCPM_example","text":"matrix 18481 rows 16 columns","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/logCPM_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"logCPM_example: Normalised logCPM of malignant breast cancer tumors PDE from 8 ER+PR+ breast cancer patients (GSE80098) — logCPM_example","text":"https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE80098","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/metadata_example.html","id":null,"dir":"Reference","previous_headings":"","what":"metadata_example: Sample metadata for malignant breast cancer tumors PDE from 8 ER+PR+ breast cancer patients (GSE80098) — metadata_example","title":"metadata_example: Sample metadata for malignant breast cancer tumors PDE from 8 ER+PR+ breast cancer patients (GSE80098) — metadata_example","text":"metadata_example: Sample metadata malignant breast cancer tumors PDE 8 ER+PR+ breast cancer patients (GSE80098)","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/metadata_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"metadata_example: Sample metadata for malignant breast cancer tumors PDE from 8 ER+PR+ breast cancer patients (GSE80098) — metadata_example","text":"","code":"metadata_example"},{"path":"https://wenjun-liu.github.io/SSPT/reference/metadata_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"metadata_example: Sample metadata for malignant breast cancer tumors PDE from 8 ER+PR+ breast cancer patients (GSE80098) — metadata_example","text":"data frame 16 rows 6 columns patient patient p1-p8 treatment treatment: Vehicle E2 time amount time sample treated , hours sample sample name, corresponding column names logCPM matrix","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/metadata_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"metadata_example: Sample metadata for malignant breast cancer tumors PDE from 8 ER+PR+ breast cancer patients (GSE80098) — metadata_example","text":"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4928895/","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/normaliseByPermutation.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalise test perturbation scores by permutation — normaliseByPermutation","title":"Normalise test perturbation scores by permutation — normaliseByPermutation","text":"Normalise test perturbation scores permutation","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/normaliseByPermutation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalise test perturbation scores by permutation — normaliseByPermutation","text":"","code":"normaliseByPermutation(permutedScore, testScore, pAdj_method = \"fdr\")"},{"path":"https://wenjun-liu.github.io/SSPT/reference/normaliseByPermutation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalise test perturbation scores by permutation — normaliseByPermutation","text":"permutedScore list. Output generate_PermutedScore testScore matrix. Output weight_ssFC pAdj_method Method adjusting p-values multiple comparisons. See ?p.adjust methods available. Default FDR.","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/normaliseByPermutation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalise test perturbation scores by permutation — normaliseByPermutation","text":"dataframe.","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/normaliseByPermutation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalise test perturbation scores by permutation — normaliseByPermutation","text":"Normalise test perturbation scores generated weight_ssFC permuted perturbation scores derived generate_PermutedScore function. mean absolute deviation(MAD) median perturbation scores pathway firstly derived permuted perturbation scores. test perturbation scores converted robust z-scores using MADs medians calculated.","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/normaliseByPermutation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalise test perturbation scores by permutation — normaliseByPermutation","text":"","code":"require(AnnotationHub) require(ensembldb) # convert rownamews of logCPM from gene ids to gene entrez IDs through `AnnotationHub` ah <- AnnotationHub() #> snapshotDate(): 2021-10-20 ah <- subset(ah,genome == \"GRCh38\" & title == \"Ensembl 101 EnsDb for Homo sapiens\") ensDb <- ah[[1]] #> loading from cache rownames(logCPM_example) <- mapIds(ensDb, rownames(logCPM_example), \"ENTREZID\", keytype = \"GENEID\") #> Warning: Unable to map 3137 of 18481 requested IDs.  # Remove genes that couldn't be matched to entrez IDs logCPM_example <- logCPM_example[!is.na(rownames(logCPM_example)),]  #compute weighted single sample logFCs ls <- weight_ssFC(logCPM_example, metadata = metadata_example,  factor = \"patient\", control = \"Vehicle\")  # explore all species and databases supported by graphite graphite::pathwayDatabases() #>          species     database #> 1      athaliana         kegg #> 2      athaliana     pathbank #> 3      athaliana wikipathways #> 4        btaurus         kegg #> 5        btaurus     pathbank #> 6        btaurus     reactome #> 7        btaurus wikipathways #> 8       celegans         kegg #> 9       celegans     pathbank #> 10      celegans     reactome #> 11      celegans wikipathways #> 12   cfamiliaris         kegg #> 13   cfamiliaris     reactome #> 14   cfamiliaris wikipathways #> 15 dmelanogaster         kegg #> 16 dmelanogaster     pathbank #> 17 dmelanogaster     reactome #> 18 dmelanogaster wikipathways #> 19        drerio         kegg #> 20        drerio     reactome #> 21        drerio wikipathways #> 22         ecoli         kegg #> 23         ecoli     pathbank #> 24         ecoli wikipathways #> 25       ggallus         kegg #> 26       ggallus     reactome #> 27       ggallus wikipathways #> 28      hsapiens         kegg #> 29      hsapiens      panther #> 30      hsapiens     pathbank #> 31      hsapiens     pharmgkb #> 32      hsapiens     reactome #> 33      hsapiens        smpdb #> 34      hsapiens wikipathways #> 35     mmusculus         kegg #> 36     mmusculus     pathbank #> 37     mmusculus     reactome #> 38     mmusculus wikipathways #> 39   rnorvegicus         kegg #> 40   rnorvegicus     pathbank #> 41   rnorvegicus     reactome #> 42   rnorvegicus wikipathways #> 43   scerevisiae         kegg #> 44   scerevisiae     pathbank #> 45   scerevisiae     reactome #> 46   scerevisiae wikipathways #> 47       sscrofa         kegg #> 48       sscrofa     reactome #> 49       sscrofa wikipathways #> 50       xlaevis         kegg weightedAdjMatrix(species = \"hsapiens\", database = \"kegg\", outputDir = \"BminsI.rda\")  # compute test perturbation scores ssPertScore <- perturbationScore(ls$logFC, \"BminsI.rda\") # generate permuted perturbation scores permutedScore <- generate_PermutedScore(logCPM_example, numOfTreat = 2,  NB = 100, filePath = \"BminsI.rda\", weight = ls$weight) normalisedScores <- normaliseByPermutation(permutedScore, ssPertScore)"},{"path":"https://wenjun-liu.github.io/SSPT/reference/perturbationScore.html","id":null,"dir":"Reference","previous_headings":"","what":"Single Sample Perturbation Score — perturbationScore","title":"Single Sample Perturbation Score — perturbationScore","text":"Propagate weighted single sample logFCs pathway topologies compute single sample perturbation scores pathway","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/perturbationScore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single Sample Perturbation Score — perturbationScore","text":"","code":"perturbationScore(weightedFC, filePath)"},{"path":"https://wenjun-liu.github.io/SSPT/reference/perturbationScore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single Sample Perturbation Score — perturbationScore","text":"weightedFC matrix weighted single sample logFCs derived function weight_ssFC filePath file path pathway topology matrices generated using function weightedAdjMatrix","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/perturbationScore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single Sample Perturbation Score — perturbationScore","text":"list element matrix corresponding pathway. column element corresponds sample.","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/perturbationScore.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Single Sample Perturbation Score — perturbationScore","text":"function use algorithm adopted SPIA (see citation) compute single sample perturbation score per sample per pathway. rownames weighted single sample logFC matrix pathway toplogy matrices must use type gene identifier (ie. entrez ID).","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/perturbationScore.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Single Sample Perturbation Score — perturbationScore","text":"Tarca AL, Draghici S, Khatri P, Hassan SS, Mittal P, Kim JS, Kim CJ, Kusanovic JP, Romero R. novel signaling pathway impact analysis. Bioinformatics. 2009 Jan 1;25(1):75-82.","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/perturbationScore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Single Sample Perturbation Score — perturbationScore","text":"","code":"require(AnnotationHub) require(ensembldb) # convert rownamews of logCPM from gene ids to gene entrez IDs through `AnnotationHub` ah <- AnnotationHub() #> snapshotDate(): 2021-10-20 ah <- subset(ah,genome == \"GRCh38\" & title == \"Ensembl 101 EnsDb for Homo sapiens\") ensDb <- ah[[1]] #> loading from cache rownames(logCPM_example) <- mapIds(ensDb, rownames(logCPM_example), \"ENTREZID\", keytype = \"GENEID\") #> Warning: Unable to map 3137 of 18481 requested IDs.  # Remove genes that couldn't be matched to entrez IDs logCPM_example <- logCPM_example[!is.na(rownames(logCPM_example)),]  #compute weighted single sample logFCs ls <- weight_ssFC(logCPM_example, metadata = metadata_example, factor = \"patient\", control = \"Vehicle\")  # explore all species and databases supported by graphite graphite::pathwayDatabases() #>          species     database #> 1      athaliana         kegg #> 2      athaliana     pathbank #> 3      athaliana wikipathways #> 4        btaurus         kegg #> 5        btaurus     pathbank #> 6        btaurus     reactome #> 7        btaurus wikipathways #> 8       celegans         kegg #> 9       celegans     pathbank #> 10      celegans     reactome #> 11      celegans wikipathways #> 12   cfamiliaris         kegg #> 13   cfamiliaris     reactome #> 14   cfamiliaris wikipathways #> 15 dmelanogaster         kegg #> 16 dmelanogaster     pathbank #> 17 dmelanogaster     reactome #> 18 dmelanogaster wikipathways #> 19        drerio         kegg #> 20        drerio     reactome #> 21        drerio wikipathways #> 22         ecoli         kegg #> 23         ecoli     pathbank #> 24         ecoli wikipathways #> 25       ggallus         kegg #> 26       ggallus     reactome #> 27       ggallus wikipathways #> 28      hsapiens         kegg #> 29      hsapiens      panther #> 30      hsapiens     pathbank #> 31      hsapiens     pharmgkb #> 32      hsapiens     reactome #> 33      hsapiens        smpdb #> 34      hsapiens wikipathways #> 35     mmusculus         kegg #> 36     mmusculus     pathbank #> 37     mmusculus     reactome #> 38     mmusculus wikipathways #> 39   rnorvegicus         kegg #> 40   rnorvegicus     pathbank #> 41   rnorvegicus     reactome #> 42   rnorvegicus wikipathways #> 43   scerevisiae         kegg #> 44   scerevisiae     pathbank #> 45   scerevisiae     reactome #> 46   scerevisiae wikipathways #> 47       sscrofa         kegg #> 48       sscrofa     reactome #> 49       sscrofa wikipathways #> 50       xlaevis         kegg weightedAdjMatrix(species = \"hsapiens\", database = \"kegg\", outputDir = \"BminsI.rda\")  ssPertScore <- perturbationScore(ls$logFC, filePath = \"BminsI.rda\")"},{"path":"https://wenjun-liu.github.io/SSPT/reference/weight_ssFC.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute weighted single sample LogFCs from normalised logCPM — weight_ssFC","title":"Compute weighted single sample LogFCs from normalised logCPM — weight_ssFC","text":"Compute weighted single sample logFCs treated samples using normalised logCPM values. Fit lowess curve variance single sample logFCs ~ mean logCPM, use predict gene-wise weight. weighted single sample logFCs ready computing perturbation scores.","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/weight_ssFC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute weighted single sample LogFCs from normalised logCPM — weight_ssFC","text":"","code":"weight_ssFC(logCPM, metadata, factor, control)"},{"path":"https://wenjun-liu.github.io/SSPT/reference/weight_ssFC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute weighted single sample LogFCs from normalised logCPM — weight_ssFC","text":"logCPM Matrix normaslised logCPM rows genes columns samples. Row names need gene entrez ID column names need sample names metadata Sample metadata data frame described details section. factor Factor defines samples can put matching pairs (eg. patient). control Treatment level control.","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/weight_ssFC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute weighted single sample LogFCs from normalised logCPM — weight_ssFC","text":"list two elements: $weight  gene-wise weights; $logFC weighted single sample logFC matrix","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/weight_ssFC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute weighted single sample LogFCs from normalised logCPM — weight_ssFC","text":"function computes weighted single sample logFCs normalised logCPM values, used computing single sample perturbation scores. Since genes smaller logCPM turn larger variance among single sample logFCs. lowess curve fitted estimate relationship variance single sample logFCs mean logCPM, relationship used estimate variance mean logCPM value. Gene-wise weights, inverse variances, multiplied single sample logFCs downweight genes low counts. assumed genes extremely low counts removed count matrix normalised prior logCPM matrix derived. Rownames matrix must genes' entrez ID. convert gene identifiers entrz ID, see example. Sample metadata number rows number columns logCPM matrix. Metadata also must column called \"sample\" storing sample names (column names logCPM matrix), column called \"treatment\" storing treatment sample.control treatment level specified control parameter must exist treatment column. analysis designed experimental designs include matched pairs samples, tissues collected patient treated different treatments study different treatment effects. Parameter factor tells function samples can put matching pairs. must also included column metadata.","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/weight_ssFC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute weighted single sample LogFCs from normalised logCPM — weight_ssFC","text":"","code":"require(AnnotationHub) require(ensembldb) # convert rownamews of logCPM from gene ids to gene entrez IDs through `AnnotationHub` ah <- AnnotationHub() #> snapshotDate(): 2021-10-20 ah <- subset(ah,genome == \"GRCh38\" & title == \"Ensembl 101 EnsDb for Homo sapiens\") ensDb <- ah[[1]] #> loading from cache rownames(logCPM_example) <- mapIds(ensDb, rownames(logCPM_example), \"ENTREZID\", keytype = \"GENEID\") #> Warning: Unable to map 3137 of 18481 requested IDs.  # Remove genes that couldn't be matched to entrez IDs logCPM_example <- logCPM_example[!is.na(rownames(logCPM_example)),]  # Inspect metadata data frame to make sure it has treatment, sample and patient columns head(metadata_example) #> # A tibble: 6 × 4 #> # Groups:   patient, treatment, time [6] #>   patient sample         time treatment #>   <chr>   <chr>         <dbl> <fct>     #> 1 N1      Vehicle_N1_24    24 Vehicle   #> 2 N1      E2_N1_24         24 E2        #> 3 N2      Vehicle_N2_48    48 Vehicle   #> 4 N2      E2_N2_48         48 E2        #> 5 N3      Vehicle_N3_48    48 Vehicle   #> 6 N3      E2_N3_48         48 E2        length(setdiff(colnames(logCPM_example), metadata_example$sample)) == 0 #> [1] TRUE ls <- weight_ssFC(logCPM_example, metadata = metadata_example,  factor = \"patient\", control = \"Vehicle\")"},{"path":"https://wenjun-liu.github.io/SSPT/reference/weightedAdjMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create pathway topology weighted adjacent matrix — weightedAdjMatrix","title":"Create pathway topology weighted adjacent matrix — weightedAdjMatrix","text":"Convert pathway topology matrices normalized weighted directed adjacency matrices describing gene signaling network.","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/weightedAdjMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create pathway topology weighted adjacent matrix — weightedAdjMatrix","text":"","code":"weightedAdjMatrix(   species,   database,   pathwayName = NULL,   beta = NULL,   outputDir )"},{"path":"https://wenjun-liu.github.io/SSPT/reference/weightedAdjMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create pathway topology weighted adjacent matrix — weightedAdjMatrix","text":"species See example supported species. database See example supported databases. pathwayName Optional. Subset pathway names vector. beta Optional. named numeric vector weights assigned type gene/protein relation type. See details information. outputDir file directory specifying weighted adjacent matrix stored RData object.","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/weightedAdjMatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create pathway topology weighted adjacent matrix — weightedAdjMatrix","text":"function takes pathway topology information retrieved using graphite convert normalized weighted directed adjacency matrices describing gene signaling network, can directed used compute pathway perturbation score SPIA algorithm. See cited document details. beta parameter specifies weights assigned type gene-gene interaction. named numeric vector length 23, whose names must : c(\"activation\",\"compound\",\"binding/association\",\"expression\",\"inhibition\",\"activation_phosphorylation\",\"phosphorylation\", \"indirect\",\"inhibition_phosphorylation\",\"dephosphorylation_inhibition\",\"dissociation\",\"dephosphorylation\",\"activation_dephosphorylation\", \"state\",\"activation_indirect\",\"inhibition_ubiquination\",\"ubiquination\",\"expression_indirect\",\"indirect_inhibition\", \"repression\",\"binding/association_phosphorylation\",\"dissociation_phosphorylation\",\"indirect_phosphorylation\"). unspecified, beta default chosen : c(1,0,0,1,-1,1,0,0,-1,-1,0,0,1,0,1,-1,0,1,-1,-1,0,0,0). converted weighted adjacent matrices stored list write file directory specified outputDir parameter.","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/weightedAdjMatrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create pathway topology weighted adjacent matrix — weightedAdjMatrix","text":"Tarca AL, Draghici S, Khatri P, Hassan SS, Mittal P, Kim JS, Kim CJ, Kusanovic JP, Romero R. novel signaling pathway impact analysis. Bioinformatics. 2009 Jan 1;25(1):75-82. Sales, G., Calura, E., Cavalieri, D. et al. graphite - Bioconductor package convert pathway topology gene network. BMC Bioinformatics 13, 20 (2012).","code":""},{"path":"https://wenjun-liu.github.io/SSPT/reference/weightedAdjMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create pathway topology weighted adjacent matrix — weightedAdjMatrix","text":"","code":"# explore all species and databases supported by graphite graphite::pathwayDatabases() #>          species     database #> 1      athaliana         kegg #> 2      athaliana     pathbank #> 3      athaliana wikipathways #> 4        btaurus         kegg #> 5        btaurus     pathbank #> 6        btaurus     reactome #> 7        btaurus wikipathways #> 8       celegans         kegg #> 9       celegans     pathbank #> 10      celegans     reactome #> 11      celegans wikipathways #> 12   cfamiliaris         kegg #> 13   cfamiliaris     reactome #> 14   cfamiliaris wikipathways #> 15 dmelanogaster         kegg #> 16 dmelanogaster     pathbank #> 17 dmelanogaster     reactome #> 18 dmelanogaster wikipathways #> 19        drerio         kegg #> 20        drerio     reactome #> 21        drerio wikipathways #> 22         ecoli         kegg #> 23         ecoli     pathbank #> 24         ecoli wikipathways #> 25       ggallus         kegg #> 26       ggallus     reactome #> 27       ggallus wikipathways #> 28      hsapiens         kegg #> 29      hsapiens      panther #> 30      hsapiens     pathbank #> 31      hsapiens     pharmgkb #> 32      hsapiens     reactome #> 33      hsapiens        smpdb #> 34      hsapiens wikipathways #> 35     mmusculus         kegg #> 36     mmusculus     pathbank #> 37     mmusculus     reactome #> 38     mmusculus wikipathways #> 39   rnorvegicus         kegg #> 40   rnorvegicus     pathbank #> 41   rnorvegicus     reactome #> 42   rnorvegicus wikipathways #> 43   scerevisiae         kegg #> 44   scerevisiae     pathbank #> 45   scerevisiae     reactome #> 46   scerevisiae wikipathways #> 47       sscrofa         kegg #> 48       sscrofa     reactome #> 49       sscrofa wikipathways #> 50       xlaevis         kegg weightedAdjMatrix(species = \"hsapiens\", database = \"kegg\", outputDir = \"BminsI.rda\")  # if only interested in selected pathways, specify the pathway names in the `pathwayName` parameter weightedAdjMatrix(species = \"hsapiens\", database = \"kegg\", pathwayName = c(\"Glycolysis / Gluconeogenesis\", \"Citrate cycle (TCA cycle)\",\"Pentose phosphate pathway\"), outputDir = \"BminsI.rda\")"}]
