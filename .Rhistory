)
p2 <- treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
mutate(`-log10(p)` = -log10(pvalue)) %>%
plot_gs_network(
gsTopology = gsTopology,
colorBy = "-log10(p)"
) +
theme(
panel.grid = element_blank(),
panel.background = element_blank()
)
(p1 | p2) +
plot_annotation(tag_levels = "A")
pathway2plot <- treat_sig %>%
dplyr::filter(Treatment == "R5020") %>%
arrange(FDR) %>%
.[1:18,] %>%
mutate(
status = ifelse(Estimate > 0, "Activated", "Inhibited"),
status = ifelse(FDR < 0.05, status, "Unchanged"))
pathway2plot <- treat_sig %>%
dplyr::filter(Treatment == "R5020") %>%
arrange(FDR) %>%
.[1:20,] %>%
mutate(
status = ifelse(Estimate > 0, "Activated", "Inhibited"),
status = ifelse(FDR < 0.05, status, "Unchanged"))
p2 <- pathway2plot %>%
mutate(`-log10(p)` = -log10(pvalue)) %>%
plot_gs_network(
gsTopology = gsTopology,
colorBy = "-log10(p)"
) +
theme(
panel.grid = element_blank(),
panel.background = element_blank()
)
(p1 | p2) +
plot_annotation(tag_levels = "A")
(p1 | p2) +
plot_annotation(tag_levels = "A")
(p1 | p2) +
plot_annotation(tag_levels = "A")
set.seed(123)
pathway2plot %>%
plot_community(
gsTopology = gsTopology,
colorBy = "status",
color_lg_title = "Community"
) +
theme(panel.background = element_blank())
pathway2plot %>%
plot_community(
gsTopology = gsTopology,
colorBy = "status",
color_lg_title = "Community"
) +
scale_color_manual(
values = c(
"Activated" = "red",
"Unchanged" = "gray"
)
) +
theme(panel.background = element_blank())
set.seed(123)
pathway2plot %>%
plot_community(
gsTopology = gsTopology,
colorBy = "status",
color_lg_title = "Community"
) +
scale_color_manual(
values = c(
"Activated" = "red",
"Unchanged" = "gray"
)
) +
theme(panel.background = element_blank())
set.seed(123)
p1 <- pathway2plot %>%
plot_gs_network(
gsTopology = gsTopology,
colorBy = "status"
) +
scale_color_manual(
values = c(
"Activated" = "red",
"Unchanged" = "gray"
)
) +
theme(
panel.grid = element_blank(),
panel.background = element_blank()
)
set.seed(123)
p2 <- pathway2plot %>%
mutate(`-log10(p)` = -log10(pvalue)) %>%
plot_gs_network(
gsTopology = gsTopology,
colorBy = "-log10(p)"
) +
theme(
panel.grid = element_blank(),
panel.background = element_blank()
)
(p1 | p2) +
plot_annotation(tag_levels = "A")
set.seed(123)
pathway2plot %>%
plot_community(
gsTopology = gsTopology,
colorBy = "status",
color_lg_title = "Community"
) +
scale_color_manual(
values = c(
"Activated" = "red",
"Unchanged" = "gray"
)
) +
theme(panel.background = element_blank())
pathway2plot %>%
plot_gs2gene(
gsTopology = gsTopology,
colorGsBy = "Estimate",
labelGene = FALSE,
geneNodeSize  = 1,
edgeAlpha = 0.1,
gsNameSize = 2,
filterGeneBy = 3
) +
scale_fill_gradient2() +
theme(panel.background = element_blank())
treat_sig %>%
dplyr::filter(FDR < 0.05,) %>%
plot_gs2gene(
gsTopology = gsTopology,
colorGsBy = "Estimate",
labelGene = FALSE,
geneNodeSize  = 1,
edgeAlpha = 0.1,
gsNameSize = 2,
filterGeneBy = 3
) +
scale_fill_gradient2() +
theme(panel.background = element_blank())
meanFC <- weightedFC$weighted_logFC %>%
.[, str_detect(colnames(.), "E2", negate = TRUE)] %>%
apply(1, mean )
top200_gene <- meanFC %>%
abs() %>%
sort(decreasing = TRUE, ) %>%
.[1:200] %>%
names()
top200_FC <- meanFC %>%
.[names(.) %in% top200_gene]
top200_FC  <- ifelse(top200_FC > 0, "Up-Regulated", "Down-Regulated")
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "E2+R5020") %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_gs2gene(
gsTopology = gsTopology,
colorGsBy = "status",
geneFC = top200_FC,
mapEntrezID = entrez2name,
gsNameSize = 3
) +
scale_fill_manual(values = c("darkred", "lightskyblue")) +
scale_colour_manual(values = c("red", "blue")) +
theme(panel.background = element_blank())
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_gs2gene(
gsTopology = gsTopology,
colorGsBy = "status",
geneFC = top200_FC,
mapEntrezID = entrez2name,
gsNameSize = 3
) +
scale_fill_manual(values = c("darkred", "lightskyblue")) +
scale_colour_manual(values = c("red", "blue")) +
theme(panel.background = element_blank())
weightedFC$weighted_logFC %>%
.[, str_detect(colnames(.), "E2", negate = TRUE)]
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_gs2gene(
gsTopology = gsTopology,
colorGsBy = "status",
geneFC = top200_FC,
mapEntrezID = entrez2name,
gsNameSize = 3
) +
scale_fill_manual(values = c("darkred", "lightskyblue")) +
scale_colour_manual(values = c("red", "blue")) +
theme(panel.background = element_blank())
meanFC <- weightedFC$weighted_logFC %>%
.[, str_detect(colnames(.), "E2", negate = TRUE)] %>%
apply(1, mean )
top500_gene <- meanFC %>%
abs() %>%
sort(decreasing = TRUE, ) %>%
.[1:500] %>%
names()
top500_FC <- meanFC %>%
.[names(.) %in% top500_gene]
top500_FC  <- ifelse(top500_FC > 0, "Up-Regulated", "Down-Regulated")
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_gs2gene(
gsTopology = gsTopology,
colorGsBy = "status",
geneFC = top500_FC,
mapEntrezID = entrez2name,
gsNameSize = 3
) +
scale_fill_manual(values = c("darkred", "lightskyblue")) +
scale_colour_manual(values = c("red", "blue")) +
theme(panel.background = element_blank())
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_gs2gene(
gsTopology = gsTopology,
colorGsBy = "status",
geneFC = top500_FC,
mapEntrezID = entrez2name,
gsNameSize = 3,
filterGeneBy = 0
) +
scale_fill_manual(values = c("darkred", "lightskyblue")) +
scale_colour_manual(values = c("red", "blue")) +
theme(panel.background = element_blank())
weightedFC$weighted_logFC %>%
.[, str_detect(colnames(.), "E2", negate = TRUE)]
check()
check()
use_package("patchwork", type = "Suggests")
use_package("colorspace", type = "Suggests")
build_vignettes()
check()
BiocCheck::BiocCheck()
document()
getwd()
?sSNAPPY::retrieve_topology
library(devtools)
load_all()
pathbank <- retrieve_topology(database = "pathbank", species = "hsapiens")
pathbank <- retrieve_topology(database = "pathbank", species = "hsapiens", keyword = "cycle")
names(pathbank)
CAC_gene <- rownames(pathbank$`pathbank.Citric Acid Cycle`)
CAC_gene
?sSNAPPY::plot_gene_contribution
load(system.file("extdata", "entrez2name.rda", package = "sSNAPPY"))
entrez2name %>%
dplyr::filter(entrezid %in% CAC_gene)
?sSNAPPY::retrieve_topology
pathbank$`pathbank.Citric Acid Cycle` %>%
panther <- retrieve_topology(database = "panther", species = "hsapiens",
keyword = "metabolism")
pathbank$`pathbank.Citric Acid Cycle` %>%
panther <- retrieve_topology(database = "panther", species = "hsapiens",
keyword = "cycle")
pathbank$`pathbank.Citric Acid Cycle` %>%
panther <- retrieve_topology(database = "panther", species = "hsapiens")
names(panther)
panther <- retrieve_topology(database = "panther", species = "hsapiens")
names(panther)
JAK_panther <- panther$`panther.JAK/STAT signaling pathway`
JAK_panther
entrez2name %>%
dplyr::filter(entrezid %in% rownames(JAK_panther))
Bcell_panther <- panther$`panther.B cell activation`
entrez2name %>%
dplyr::filter(entrezid %in% rownames(Bcell_panther))
entrez2name %>%
dplyr::filter(
entrezid %in% rownames(Bcell_panther),
mapTo = "CD45")
entrez2name %>%
dplyr::filter(
entrezid %in% rownames(Bcell_panther),
mapTo == "CD45")
Bcell_panther %>%
apply(1, function(x){x !=0})
Bcell_panther %>%
apply(1, function(x){sum(x !=0) != 1})
Bcell_panther %>%
.[apply(1, function(x){sum(x !=0) != 1}),]
Bcell_panther %>%
.[apply(., 1, function(x){sum(x !=0) != 1}),]
entrez2name %>%
dplyr::filter(
entrezid %in% c("ENTREZID:4215", "ENTREZID:10746")
)
entrez2name %>%
dplyr::filter(
entrezid %in% rownames(Bcell_panther)) %>%
pull(mapTo)
Bcell_panther %>%
.[,apply(., 2, function(x){sum(x !=0) != 1})]
gene2Inv <- Bcell_panther %>%
.[,apply(., 2, function(x){sum(x !=0) != 1})]
entrez2name %>%
dplyr::filter(
entrezid %in% rownames(gene2Inv)
)
Bcell_panther["ENTREZID:3725",]
Bcell_panther[,"ENTREZID:3725"]
gene2Inv <- Bcell_panther %>%
.[,apply(., 2, function(x){sum(x !=0) != 1})]
entrez2name %>%
dplyr::filter(
entrezid %in% colnames(gene2Inv)
)
Bcell_panther[,"ENTREZID:6300"]
entrez2name %>%
dplyr::filter(
entrezid == "ENTREZID:4215"
)
entrez2name %>%
dplyr::filter(mapTo == ""CD22"")
entrez2name %>%
dplyr::filter(mapTo == "CD22")
Bcell_panther["ENTREZID:933",]
Bcell_panther[,"ENTREZID:933"]
entrez2name %>%
dplyr::filter(mapTo == "PIK3CD")
Bcell_panther["ENTREZID:5293",]
Bcell_panther[,"ENTREZID:5293"]
entrez2name %>%
dplyr::filter(mapTo == "SOS1")
Bcell_panther[,"ENTREZID:6654"]
Bcell_panther["ENTREZID:6654",]
gene2Inv <- Bcell_panther %>%
.[,apply(., 2, function(x){sum(x !=0) != 1})]
entrez2name %>%
dplyr::filter(
entrezid %in% colnames(gene2Inv)
)
,
Bcell_panther[,"ENTREZID:6300"]
Angio_panther <- panther$panther.Angiogenesis
entrez2name %>%
dplyr::filter(
entrezid %in% rownames(Angio_panther)) %>%
pull(mapTo)
gene2Inv <- Angio_panther %>%
.[,apply(., 2, function(x){sum(x !=0) != 1})]
entrez2name %>%
dplyr::filter(
entrezid %in% colnames(gene2Inv)
)
gene2Inv <- Angio_panther %>%
.[,apply(., 1, function(x){sum(x !=0) != 1})]
entrez2name %>%
dplyr::filter(
entrezid %in% colnames(gene2Inv)
)
Angio_panther %>%
.[,apply(., 1, function(x){sum(x !=0) != 1})]
gene2Inv <- Angio_panther %>%
.[,apply(Angio_panther, 1, function(x){sum(x !=0) != 1})]
entrez2name %>%
dplyr::filter(
entrezid %in% colnames(gene2Inv)
)
gene2Inv
gene2Inv <- Angio_panther %>%
.[,apply(Angio_panther, 2, function(x){sum(x !=0) != 1})]
gene2Inv
gene2Inv
Angio_panther
dim(Angio_panther)
Angio_panther == -1diag(47)
Angio_panther == -1*diag(47)
all.equal(Angio_panther,-1*diag(47))
all.equal(Angio_panther,(-1*diag(47)))
sum(Angio_panther == -1*diag(47))
sum(Angio_panther != -1*diag(47))
sum(x != -1*diag(ncol = x))
sapply(pathbank, function(x){
sum(x != -1*diag(ncol = x))
})
sapply(pathbank, function(x){
sum(x != -1*diag(ncol(x)))
})
sapply(panther, function(x){
sum(x != -1*diag(ncol(x)))
})
length(panther)
panther$`panther.Hedgehog signaling pathway`
entrez2name %>%
dplyr::filter(
entrezid == "ENTREZID:6608"
)
entrez2name %>%
dplyr::filter(
entrezid == "ENTREZID:2735"
)
entrez2name %>%
dplyr::filter(
entrezid == "ENTREZID:27148"
)
pathbank <- retrieve_topology(database = "pathbank", species = "hsapiens")
length(pathbank)
pathbank_valid <- sapply(pathbank, function(x){
sum(x != -1*diag(ncol(x)))
})
pathbank_valid
kegg <- retrieve_topology(database = "kegg", species = "hsapiens")
sapply(kegg, function(x){
sum(x != -1*diag(ncol(x)))
})
kegg.Glycolysis / Gluconeogenesis
kegg$`kegg.Glycolysis / Gluconeogenesis`
kegg$`kegg.Glycolysis / Gluconeogenesis` %>%
.[,apply(., 2, function(x){sum(x !=0) != 1})]
kegg$`kegg.Glycolysis / Gluconeogenesis` %>%
.[apply(., 2, function(x){sum(x !=0) != 1})]
kegg$`kegg.Glycolysis / Gluconeogenesis` %>%
.[apply(., 1, function(x){sum(x !=0) != 1})]
sapply(kegg, function(x){
sum(x != -1*diag(ncol(x)))
})
pathbank_valid <- sapply(pathbank, function(x){
sum(x != -1*diag(ncol(x)))
})
pathbank_valid
pathbank_valid <- sapply(pathbank, function(x){
sum(x != -1*diag(ncol(x)))
}) %>%
enframe(
name = "gs_name",
value = "Identity"
)
pathbank_valid <- sapply(pathbank, function(x){
sum(x != -1*diag(ncol(x)))
}) %>%
dplyr::enframe(
name = "gs_name",
value = "Identity"
)
pathbank_valid <- sapply(pathbank, function(x){
sum(x != -1*diag(ncol(x)))
}) %>%
tidyverse::enframe(
name = "gs_name",
value = "Identity"
)
pathbank_valid <- sapply(pathbank, function(x){
sum(x != -1*diag(ncol(x)))
}) %>%
tibble::enframe(
name = "gs_name",
value = "Identity"
)
pathbank_valid
pathbank_valid%>%
dplyr::filter(Identity == 0)
pathbank_valid%>%
dplyr::filter(Identity != 0)
table(pathbank_valid$Identity)
length(pathbank)
pathbank_valid
dplyr::filter(pathbank_valid, str_detect(gs_name, "p53"))
dplyr::filter(pathbank_valid, str_detect(gs_name, "death"))
dplyr::filter(pathbank_valid, str_detect(gs_name, "cycle"))
?str_detect
pathbank$pathbank.Gluconeogenesis
panther_valid <- sapply(panther, function(x){
sum(x != -1*diag(ncol(x)))
}) %>%
tibble::enframe(
name = "gs_name",
value = "Identity"
)
table(panther_valid$Identity)
panther <- retrieve_topology(database = "panther", species = "hsapiens")
panther_valid <- sapply(panther, function(x){
sum(x != -1*diag(ncol(x)))
}) %>%
tibble::enframe(
name = "gs_name",
value = "Identity"
)
table(panther_valid$Identity)
length(panther)
pharmgkb <- retrieve_topology(database = "pharmgkb", species = "hsapiens")
length(pharmgkb)
pharmgkb_valid <- sapply(pharmgkb, function(x){
sum(x != -1*diag(ncol(x)))
}) %>%
tibble::enframe(
name = "gs_name",
value = "Identity"
)
table(pharmgkb_valid$Identity)
smpdb <- retrieve_topology(database = "smpdb", species = "hsapiens")
length(smpdb)
smpdb_valid <- sapply(smpdb, function(x){
sum(x != -1*diag(ncol(x)))
}) %>%
tibble::enframe(
name = "gs_name",
value = "Identity"
)
table(smpdb_valid$Identity)
