lapply(
plot_gsNetwork,
gsTopology = gsTopology,
colorBy = "pvalue"
)
plot_grid(
plotlist = pl,
nrow = 1
)
plot_gsNetwork
?plot_gsNetwork
pl <- normalisedScores %>%
dplyr::filter(adjPvalue < 0.05) %>%
split(f = .$sample) %>%
lapply(
plot_gsNetwork,
gsTopology = gsTopology,
colorBy = "robustZ",
color_lg_title = "Direction of Perturbation"
)
plot_grid(
plotlist = pl,
nrow = 1
)
pl <- normalisedScores %>%
dplyr::filter(adjPvalue < 0.05) %>%
split(f = .$sample) %>%
lapply(
plot_gsNetwork,
gsTopology = gsTopology,
colorBy = "pvalue",
color_lg_title = "P-value"
)
plot_grid(
plotlist = pl,
nrow = 1
)
normalisedScores %>%
left_join(metadata_example) %>%
mutate_at(vars(c("time", "PR")), as.factor) %>%
split(f = .$gs_name) %>%
.["Estrogen signaling pathway"] %>%
lapply(function(x)lm(robustZ ~ 0 + treatment + treatment:PR, data = x))
test <- normalisedScores %>%
left_join(metadata_example) %>%
mutate_at(vars(c("time", "PR")), as.factor) %>%
split(f = .$gs_name) %>%
.[["Estrogen signaling pathway"]]
test
mod1 <- lm(robustZ ~ 0 + treatment + treatment:PR, data = test)
mod2 <- lm(robustZ ~ 0 + treatment, data = test)
anova(mod2, mod1)
mod2 <- lm(robustZ ~ 0 + treatment + PR, data = test)
mod2
mod1 <- lm(robustZ ~ 0 + treatment + treatment:PR, data = test)
mod2 <- lm(robustZ ~ 0 + treatment + PR, data = test)
anova(mod2, mod1)
mod1 <- lm(robustZ ~ 0 + treatment, data = test)
mod2 <- lm(robustZ ~ 0 + treatment + PR, data = test)
anova(mod1, mod2)
fit <- normalisedScores %>%
left_join(metadata_example) %>%
mutate_at(vars(c("time", "PR")), as.factor) %>%
split(f = .$gs_name) %>%
.["Estrogen signaling pathway"] %>%
lapply(function(x)lm(robustZ ~ 0 + treatment + PR, data = x)) %>%
lapply(summary)
treat_sig <- sapply(names(fit), function(x){
fit[[x]]$coefficients %>%
as.data.frame() %>%
dplyr::select(Estimate,
pvalue = `Pr(>|t|)` ) %>%
rownames_to_column("Comparison") %>%
mutate(gs_name = x,
FDR = p.adjust(pvalue, "fdr"),
Comparison = str_remove_all(Comparison, "treatment|PR"))
}, simplify = FALSE) %>%
bind_rows()
treat_sig %>%
dplyr::filter(FDR < 0.05)
fit <- normalisedScores %>%
left_join(metadata_example) %>%
mutate_at(vars(c("time", "PR")), as.factor) %>%
split(f = .$gs_name) %>%
#.["Estrogen signaling pathway"] %>%
lapply(function(x)lm(robustZ ~ 0 + treatment + PR, data = x)) %>%
lapply(summary)
treat_sig <- sapply(names(fit), function(x){
fit[[x]]$coefficients %>%
as.data.frame() %>%
dplyr::select(Estimate,
pvalue = `Pr(>|t|)` ) %>%
rownames_to_column("Comparison") %>%
mutate(gs_name = x,
FDR = p.adjust(pvalue, "fdr"),
Comparison = str_remove_all(Comparison, "treatment|PR"))
}, simplify = FALSE) %>%
bind_rows()
treat_sig %>%
dplyr::filter(FDR < 0.05) %>%
mutate_at(vars(c("Comparison", "gs_name")), as.factor) %>%
mutate_if(is.numeric, sprintf, fmt = '%#.4f') %>%
mutate(Direction = ifelse(Estimate < 0, "Inhibited", "Activation")) %>%
dplyr::select(
Comparison, `Perturbation Score` = Estimate, Direction,
`Gene-set name` = gs_name,
`P-value` = pvalue,
FDR
) %>%
datatable(
filter = "top",
options = list(
columnDefs = list(list(targets = "Direction", visible = FALSE))
)) %>%
formatStyle(
'Perturbation Score', 'Direction',
backgroundColor = styleEqual(c("Inhibited", "Activation"), c('lightblue', 'indianred'))
)
treat_sig %>%
dplyr::filter(FDR < 0.05) %>%
mutate_at(vars(c("Comparison", "gs_name")), as.factor) %>%
mutate_if(is.numeric, sprintf, fmt = '%#.4f') %>%
mutate(Direction = ifelse(Estimate < 0, "Inhibited", "Activation"),
Significance = ifelse(FDR < 0.05, TRUE, FALSE)) %>%
dplyr::select(
Comparison, `Perturbation Score` = Estimate, Direction,
`Gene-set name` = gs_name,
`P-value` = pvalue,
FDR
) %>%
datatable(
filter = "top",
options = list(
columnDefs = list(list(targets = "Direction", visible = FALSE))
)) %>%
formatStyle(
'Perturbation Score', 'Direction',
backgroundColor = styleEqual(c("Inhibited", "Activation"), c('lightblue', 'indianred'))
)
treat_sig %>%
dplyr::filter(FDR < 0.05) %>%
mutate_at(vars(c("Comparison", "gs_name")), as.factor) %>%
mutate_if(is.numeric, sprintf, fmt = '%#.4f') %>%
mutate(Direction = ifelse(Estimate < 0, "Inhibited", "Activation"),
Significance = ifelse(FDR < 0.05, TRUE, FALSE)) %>%
dplyr::select(
Comparison, `Perturbation Score` = Estimate, Direction,
`Gene-set name` = gs_name,
`P-value` = pvalue, Significance,
FDR
) %>%
datatable(
filter = "top",
options = list(
columnDefs = list(list(targets = "Direction", visible = FALSE))
)) %>%
formatStyle(
'Perturbation Score', 'Direction',
backgroundColor = styleEqual(c("Inhibited", "Activation"), c('lightblue', 'indianred'))
)
treat_sig %>%
dplyr::filter(FDR < 0.05) %>%
mutate_at(vars(c("Comparison", "gs_name")), as.factor) %>%
mutate_if(is.numeric, sprintf, fmt = '%#.4f') %>%
mutate(Direction = ifelse(Estimate < 0, "Inhibited", "Activation")) %>%
dplyr::select(
Comparison, `Perturbation Score` = Estimate, Direction,
`Gene-set name` = gs_name,
`P-value` = pvalue,
FDR
) %>%
datatable(
filter = "top",
options = list(
columnDefs = list(list(targets = "Direction", visible = FALSE))
)) %>%
formatStyle(
'Perturbation Score', 'Direction',
backgroundColor = styleEqual(c("Inhibited", "Activation"), c('lightblue', 'indianred'))
)
treat_sig %>%
dplyr::filter(FDR < 0.05)
fit$`Estrogen signaling pathway`$coefficients
fit[[x]]$coefficients %>%
as.data.frame() %>%
.[1:2,] %>%
dplyr::select(Estimate,
pvalue = `Pr(>|t|)` ) %>%
rownames_to_column("Treatment") %>%
mutate(gs_name = x,
FDR = p.adjust(pvalue, "fdr"),
Comparison = str_remove_all(Comparison, "treatment"))
treat_sig <- sapply(names(fit), function(x){
fit[[x]]$coefficients %>%
as.data.frame() %>%
.[1:2,] %>%
dplyr::select(Estimate,
pvalue = `Pr(>|t|)` ) %>%
rownames_to_column("Treatment") %>%
mutate(gs_name = x,
FDR = p.adjust(pvalue, "fdr"),
Comparison = str_remove_all(Comparison, "treatment"))
}, simplify = FALSE) %>%
bind_rows()
treat_sig <- sapply(names(fit), function(x){
fit[[x]]$coefficients %>%
as.data.frame() %>%
.[1:2,] %>%
dplyr::select(Estimate,
pvalue = `Pr(>|t|)` ) %>%
rownames_to_column("Treatment") %>%
mutate(gs_name = x,
FDR = p.adjust(pvalue, "fdr"),
Treatment = str_remove_all(Treatment, "treatment"))
}, simplify = FALSE) %>%
bind_rows()
treat_sig %>%
dplyr::filter(FDR < 0.05) %>%
mutate_at(vars(c("Comparison", "gs_name")), as.factor) %>%
mutate_if(is.numeric, sprintf, fmt = '%#.4f') %>%
mutate(Direction = ifelse(Estimate < 0, "Inhibited", "Activation")) %>%
dplyr::select(
Comparison, `Perturbation Score` = Estimate, Direction,
`Gene-set name` = gs_name,
`P-value` = pvalue,
FDR
) %>%
datatable(
filter = "top",
options = list(
columnDefs = list(list(targets = "Direction", visible = FALSE))
)) %>%
formatStyle(
'Perturbation Score', 'Direction',
backgroundColor = styleEqual(c("Inhibited", "Activation"), c('lightblue', 'indianred'))
)
treat_sig %>%
dplyr::filter(FDR < 0.05) %>%
mutate_at(vars(c("Treatment", "gs_name")), as.factor) %>%
mutate_if(is.numeric, sprintf, fmt = '%#.4f') %>%
mutate(Direction = ifelse(Estimate < 0, "Inhibited", "Activation")) %>%
dplyr::select(
Treatment, `Perturbation Score` = Estimate, Direction,
`Gene-set name` = gs_name,
`P-value` = pvalue,
FDR
) %>%
datatable(
filter = "top",
options = list(
columnDefs = list(list(targets = "Direction", visible = FALSE))
)) %>%
formatStyle(
'Perturbation Score', 'Direction',
backgroundColor = styleEqual(c("Inhibited", "Activation"), c('lightblue', 'indianred'))
)
treat_sig %>%
dplyr::filter(FDR < 0.05)
treat_sig %>%
dplyr::filter(FDR < 0.05) %>%
dplyr::rename(robustZ = Estimate) %>%
split(f = .$Comparison) %>%
lapply(
plot_gsNetwork,
gsTopology = gsTopology,
colorBy = "robustZ"
)
treat_sig %>%
dplyr::filter(FDR < 0.05) %>%
dplyr::rename(robustZ = Estimate) %>%
split(f = .$Treatment) %>%
lapply(
plot_gsNetwork,
gsTopology = gsTopology,
colorBy = "robustZ"
)
plot_grid(
plotlist = pl,
nrow = 1
)
treat_sig %>%
dplyr::filter(FDR < 0.05) %>%
dplyr::rename(robustZ = Estimate) %>%
split(f = .$Treatment) %>%
lapply(
plot_gsNetwork,
gsTopology = gsTopology,
colorBy = "robustZ"
)
pl <- treat_sig %>%
dplyr::filter(FDR < 0.05) %>%
dplyr::rename(robustZ = Estimate) %>%
split(f = .$Treatment) %>%
lapply(
plot_gsNetwork,
gsTopology = gsTopology,
colorBy = "robustZ"
)
plot_grid(
plotlist = pl,
nrow = 1,
labels = names(pl)
)
plot_grid(
plotlist = pl,
nrow = 1,
labels = names(pl)
)
plot_grid(
plotlist = pl,
nrow = 1,
labels = names(pl)
)
pl <- treat_sig %>%
dplyr::filter(FDR < 0.05) %>%
dplyr::rename(robustZ = Estimate) %>%
split(f = .$Treatment) %>%
lapply(
plot_gsNetwork,
layout = "kk",
gsTopology = gsTopology,
colorBy = "robustZ"
)
plot_grid(
plotlist = pl,
nrow = 1,
labels = names(pl)
)
pl <- treat_sig %>%
dplyr::filter(FDR < 0.05) %>%
dplyr::rename(robustZ = Estimate) %>%
split(f = .$Treatment) %>%
lapply(
plot_gsNetwork,
layout = "stressed",
gsTopology = gsTopology,
colorBy = "robustZ"
)
pl <- treat_sig %>%
dplyr::filter(FDR < 0.05) %>%
dplyr::rename(robustZ = Estimate) %>%
split(f = .$Treatment) %>%
lapply(
plot_gsNetwork,
layout = "stress",
gsTopology = gsTopology,
colorBy = "robustZ"
)
plot_grid(
plotlist = pl,
nrow = 1,
labels = names(pl)
)
pl <- treat_sig %>%
dplyr::filter(FDR < 0.05) %>%
dplyr::rename(robustZ = Estimate) %>%
split(f = .$Treatment) %>%
lapply(
plot_gsNetwork,
gsTopology = gsTopology,
colorBy = "robustZ"
)
plot_grid(
plotlist = pl,
nrow = 1,
labels = names(pl)
)
plot_grid(
plotlist = pl,
nrow = 1,
labels = names(pl)
)
plot_grid(
plotlist = pl,
nrow = 1,
labels = names(pl)
)
treat_sig %>%
dplyr::filter(FDR < 0.05)
treat_sig %>%
dplyr::filter(FDR < 0.05) %>%
ggplot(aes(Treatment, gs_name, fill = Estimate)) +
geom_tile()
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment = "R5020") %>%
dplyr::rename(robustZ = Estimate) %>%
plot_gsNetwork(
gsTopology = gsTopology,
colorBy = "robustZ"
)
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
dplyr::rename(robustZ = Estimate) %>%
plot_gsNetwork(
gsTopology = gsTopology,
colorBy = "robustZ"
)
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
dplyr::rename(robustZ = Estimate) %>%
plot_gsNetwork(
gsTopology = gsTopology,
colorBy = "robustZ"
)
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
dplyr::rename(robustZ = Estimate) %>%
plot_gsNetwork(
gsTopology = gsTopology,
colorBy = "robustZ"
)
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
dplyr::rename(robustZ = Estimate) %>%
plot_gsNetwork(
gsTopology = gsTopology,
colorBy = "robustZ"
)
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
dplyr::rename(robustZ = Estimate) %>%
plot_gsNetwork(
gsTopology = gsTopology,
colorBy = "robustZ"
)
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
dplyr::rename(robustZ = Estimate) %>%
plot_gsNetwork(
gsTopology = gsTopology,
colorBy = "robustZ"
)
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
dplyr::rename(robustZ = Estimate) %>%
plot_gsNetwork(
gsTopology = gsTopology,
colorBy = "robustZ"
) +
theme_bw()
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
dplyr::rename(robustZ = Estimate) %>%
plot_gsNetwork(
gsTopology = gsTopology,
colorBy = "robustZ"
) +
theme(
panel.grid = element_blank()
)
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
dplyr::rename(robustZ = Estimate) %>%
plot_gsNetwork(
gsTopology = gsTopology,
colorBy = "robustZ"
) +
theme(
panel.grid = element_blank()
) +
panel_border(remove = TRUE)
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
dplyr::rename(robustZ = Estimate) %>%
plot_gsNetwork(
gsTopology = gsTopology,
colorBy = "robustZ"
) +
theme(
panel.grid = element_blank(),
panel.background = element_blank()
)
devtools::build_vignettes()
.Last.error.trace
document()
check()
check()
use_package(c("BiocManager", "DT",
tidyverse), type = "Suggests")
use_package(c("BiocManager", "DT",
"tidyverse"), type = "Suggests")
use_package("BiocManager", type = "Suggests")
use_package("DT", type = "Suggests")
use_package("tidyverse", type = "Suggests")
build_vignettes()
if (!requireNamespace("BiocManager", quietly=TRUE))install.packages("BiocManager")
BiocManager::install("sSNAPPY")
library(sSNAPPY)
# View sample metadata
metadata_example %>%
datatable(
filter = "top"
)
pkgdown::build_site()
pkgdown::build_site()
use_package("pander", type = "Suggests")
package_coverage()
document()
package_coverage()
load_all()
package_coverage()
test_file("R/pertubationScore.R", "tests/testthat/test-perturbationScore.R")
test_file("tests/testthat/test-perturbationScore.R")
test_file("tests/testthat/test-normaliseByPermutation.R")
pkgdown::build_site()
BiocManager::install("biocthis")
?biocthis::use_bioc_github_action()
use_bioc_github_action
use_bioc_github_action()
library(biocthis)
use_bioc_github_action()
check()
