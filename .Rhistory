cluster_cols = FALSE,
mapEntrezID = entrez2name,
annotation_colors = list(
Treatment = c(R5020 = "black", `E2+R5020` = "white"),
`Z Range` = setNames(
colorRampPalette(c("navyblue", "white", "darkred"))(length(z_levels)),
z_levels
))
)
p1 <- treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_gs_network(
gsTopology = gsTopology,
colorBy = "status"
) +
theme(
panel.grid = element_blank(),
panel.background = element_blank()
)
p2 <- treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "E2+R5020") %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_gs_network(
gsTopology = gsTopology,
colorBy = "status"
) +
theme(
panel.grid = element_blank(),
panel.background = element_blank()
)
library(patchwork)
p1 | p2
p1 <- treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_gs_network(
gsTopology = gsTopology,
colorBy = "status"
) +
theme(
panel.grid = element_blank(),
panel.background = element_blank()
)
p2 <- treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
mutate(`-log10(p)` = -log10(P.Value)) %>%
plot_gs_network(
gsTopology = gsTopology,
colorBy = "-log10(p)"
) +
theme(
panel.grid = element_blank(),
panel.background = element_blank()
)
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020")
p2 <- treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
mutate(`-log10(p)` = -log10(pvalue)) %>%
plot_gs_network(
gsTopology = gsTopology,
colorBy = "-log10(p)"
) +
theme(
panel.grid = element_blank(),
panel.background = element_blank()
)
p1 | p2
(p1 | p2) +
plot_annotation(tag_levels = "A")
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
plot_community(
gsTopology = gsTopology,
colorBy = "community",
color_lg_title = "Community"
) +
theme(panel.background = element_blank())
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_community(
gsTopology = gsTopology,
colorBy = "status",
color_lg_title = "Community"
) +
theme(panel.background = element_blank())
set.seed(123)
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_community(
gsTopology = gsTopology,
colorBy = "status",
color_lg_title = "Community"
) +
theme(panel.background = element_blank())
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_community(
gsTopology = gsTopology,
colorBy = "status",
communityMethod = "label_prop",
color_lg_title = "Community"
) +
theme(panel.background = element_blank())
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_community(
gsTopology = gsTopology,
colorBy = "status",
communityMethod = "leiden",
color_lg_title = "Community"
) +
theme(panel.background = element_blank())
?plot_community
treat_sig
treat_sig %>%
dplyr::filter(Treatment == "R5020") %>%
sort(FDR)
treat_sig %>%
dplyr::filter(Treatment == "R5020") %>%
sort(.$FDR)
treat_sig %>%
dplyr::filter(Treatment == "R5020") %>%
arrange(FDR)
treat_sig %>%
dplyr::filter(Treatment == "R5020") %>%
arrange(FDR) %>%
.[1:10,] %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_community(
gsTopology = gsTopology,
colorBy = "status",
communityMethod = "leiden",
color_lg_title = "Community"
) +
theme(panel.background = element_blank())
treat_sig %>%
dplyr::filter(Treatment == "R5020") %>%
arrange(FDR) %>%
.[1:10,] %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_community(
gsTopology = gsTopology,
colorBy = "status",
color_lg_title = "Community"
) +
theme(panel.background = element_blank())
treat_sig %>%
dplyr::filter(Treatment == "R5020") %>%
arrange(FDR) %>%
.[1:15,] %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_community(
gsTopology = gsTopology,
colorBy = "status",
color_lg_title = "Community"
) +
theme(panel.background = element_blank())
treat_sig %>%
dplyr::filter(Treatment == "R5020") %>%
arrange(FDR) %>%
.[1:12,] %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_community(
gsTopology = gsTopology,
colorBy = "status",
color_lg_title = "Community"
) +
theme(panel.background = element_blank())
treat_sig %>%
dplyr::filter(Treatment == "R5020") %>%
arrange(FDR) %>%
.[1:18,] %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_community(
gsTopology = gsTopology,
colorBy = "status",
color_lg_title = "Community"
) +
theme(panel.background = element_blank())
treat_sig %>%
dplyr::filter(Treatment == "R5020") %>%
arrange(FDR) %>%
.[1:20,] %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_community(
gsTopology = gsTopology,
colorBy = "status",
color_lg_title = "Community"
) +
theme(panel.background = element_blank())
p1 <- treat_sig %>%
dplyr::filter(Treatment == "R5020") %>%
arrange(FDR) %>%
.[1:18,] %>%
mutate(
status = ifelse(Estimate > 0, "Activated", "Inhibited"),
status = ifelse(FDR < 0.05, status, "Unchanged")) %>%
plot_gs_network(
gsTopology = gsTopology,
colorBy = "status"
) +
theme(
panel.grid = element_blank(),
panel.background = element_blank()
)
p2 <- treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
mutate(`-log10(p)` = -log10(pvalue)) %>%
plot_gs_network(
gsTopology = gsTopology,
colorBy = "-log10(p)"
) +
theme(
panel.grid = element_blank(),
panel.background = element_blank()
)
(p1 | p2) +
plot_annotation(tag_levels = "A")
p1 <- treat_sig %>%
dplyr::filter(Treatment == "R5020") %>%
arrange(FDR) %>%
.[1:18,] %>%
mutate(
status = ifelse(Estimate > 0, "Activated", "Inhibited"),
status = ifelse(FDR < 0.05, status, "Unchanged")) %>%
plot_gs_network(
gsTopology = gsTopology,
colorBy = "status"
) +
scale_color_manual(
values = c(
"Activated" = "red",
"Unchanged" = "gray"
)
)
theme(
panel.grid = element_blank(),
panel.background = element_blank()
)
p1 <- treat_sig %>%
dplyr::filter(Treatment == "R5020") %>%
arrange(FDR) %>%
.[1:18,] %>%
mutate(
status = ifelse(Estimate > 0, "Activated", "Inhibited"),
status = ifelse(FDR < 0.05, status, "Unchanged")) %>%
plot_gs_network(
gsTopology = gsTopology,
colorBy = "status"
) +
scale_color_manual(
values = c(
"Activated" = "red",
"Unchanged" = "gray"
)
) +
theme(
panel.grid = element_blank(),
panel.background = element_blank()
)
p2 <- treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
mutate(`-log10(p)` = -log10(pvalue)) %>%
plot_gs_network(
gsTopology = gsTopology,
colorBy = "-log10(p)"
) +
theme(
panel.grid = element_blank(),
panel.background = element_blank()
)
(p1 | p2) +
plot_annotation(tag_levels = "A")
pathway2plot <- treat_sig %>%
dplyr::filter(Treatment == "R5020") %>%
arrange(FDR) %>%
.[1:18,] %>%
mutate(
status = ifelse(Estimate > 0, "Activated", "Inhibited"),
status = ifelse(FDR < 0.05, status, "Unchanged"))
pathway2plot <- treat_sig %>%
dplyr::filter(Treatment == "R5020") %>%
arrange(FDR) %>%
.[1:20,] %>%
mutate(
status = ifelse(Estimate > 0, "Activated", "Inhibited"),
status = ifelse(FDR < 0.05, status, "Unchanged"))
p2 <- pathway2plot %>%
mutate(`-log10(p)` = -log10(pvalue)) %>%
plot_gs_network(
gsTopology = gsTopology,
colorBy = "-log10(p)"
) +
theme(
panel.grid = element_blank(),
panel.background = element_blank()
)
(p1 | p2) +
plot_annotation(tag_levels = "A")
(p1 | p2) +
plot_annotation(tag_levels = "A")
(p1 | p2) +
plot_annotation(tag_levels = "A")
set.seed(123)
pathway2plot %>%
plot_community(
gsTopology = gsTopology,
colorBy = "status",
color_lg_title = "Community"
) +
theme(panel.background = element_blank())
pathway2plot %>%
plot_community(
gsTopology = gsTopology,
colorBy = "status",
color_lg_title = "Community"
) +
scale_color_manual(
values = c(
"Activated" = "red",
"Unchanged" = "gray"
)
) +
theme(panel.background = element_blank())
set.seed(123)
pathway2plot %>%
plot_community(
gsTopology = gsTopology,
colorBy = "status",
color_lg_title = "Community"
) +
scale_color_manual(
values = c(
"Activated" = "red",
"Unchanged" = "gray"
)
) +
theme(panel.background = element_blank())
set.seed(123)
p1 <- pathway2plot %>%
plot_gs_network(
gsTopology = gsTopology,
colorBy = "status"
) +
scale_color_manual(
values = c(
"Activated" = "red",
"Unchanged" = "gray"
)
) +
theme(
panel.grid = element_blank(),
panel.background = element_blank()
)
set.seed(123)
p2 <- pathway2plot %>%
mutate(`-log10(p)` = -log10(pvalue)) %>%
plot_gs_network(
gsTopology = gsTopology,
colorBy = "-log10(p)"
) +
theme(
panel.grid = element_blank(),
panel.background = element_blank()
)
(p1 | p2) +
plot_annotation(tag_levels = "A")
set.seed(123)
pathway2plot %>%
plot_community(
gsTopology = gsTopology,
colorBy = "status",
color_lg_title = "Community"
) +
scale_color_manual(
values = c(
"Activated" = "red",
"Unchanged" = "gray"
)
) +
theme(panel.background = element_blank())
pathway2plot %>%
plot_gs2gene(
gsTopology = gsTopology,
colorGsBy = "Estimate",
labelGene = FALSE,
geneNodeSize  = 1,
edgeAlpha = 0.1,
gsNameSize = 2,
filterGeneBy = 3
) +
scale_fill_gradient2() +
theme(panel.background = element_blank())
treat_sig %>%
dplyr::filter(FDR < 0.05,) %>%
plot_gs2gene(
gsTopology = gsTopology,
colorGsBy = "Estimate",
labelGene = FALSE,
geneNodeSize  = 1,
edgeAlpha = 0.1,
gsNameSize = 2,
filterGeneBy = 3
) +
scale_fill_gradient2() +
theme(panel.background = element_blank())
meanFC <- weightedFC$weighted_logFC %>%
.[, str_detect(colnames(.), "E2", negate = TRUE)] %>%
apply(1, mean )
top200_gene <- meanFC %>%
abs() %>%
sort(decreasing = TRUE, ) %>%
.[1:200] %>%
names()
top200_FC <- meanFC %>%
.[names(.) %in% top200_gene]
top200_FC  <- ifelse(top200_FC > 0, "Up-Regulated", "Down-Regulated")
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "E2+R5020") %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_gs2gene(
gsTopology = gsTopology,
colorGsBy = "status",
geneFC = top200_FC,
mapEntrezID = entrez2name,
gsNameSize = 3
) +
scale_fill_manual(values = c("darkred", "lightskyblue")) +
scale_colour_manual(values = c("red", "blue")) +
theme(panel.background = element_blank())
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_gs2gene(
gsTopology = gsTopology,
colorGsBy = "status",
geneFC = top200_FC,
mapEntrezID = entrez2name,
gsNameSize = 3
) +
scale_fill_manual(values = c("darkred", "lightskyblue")) +
scale_colour_manual(values = c("red", "blue")) +
theme(panel.background = element_blank())
weightedFC$weighted_logFC %>%
.[, str_detect(colnames(.), "E2", negate = TRUE)]
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_gs2gene(
gsTopology = gsTopology,
colorGsBy = "status",
geneFC = top200_FC,
mapEntrezID = entrez2name,
gsNameSize = 3
) +
scale_fill_manual(values = c("darkred", "lightskyblue")) +
scale_colour_manual(values = c("red", "blue")) +
theme(panel.background = element_blank())
meanFC <- weightedFC$weighted_logFC %>%
.[, str_detect(colnames(.), "E2", negate = TRUE)] %>%
apply(1, mean )
top500_gene <- meanFC %>%
abs() %>%
sort(decreasing = TRUE, ) %>%
.[1:500] %>%
names()
top500_FC <- meanFC %>%
.[names(.) %in% top500_gene]
top500_FC  <- ifelse(top500_FC > 0, "Up-Regulated", "Down-Regulated")
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_gs2gene(
gsTopology = gsTopology,
colorGsBy = "status",
geneFC = top500_FC,
mapEntrezID = entrez2name,
gsNameSize = 3
) +
scale_fill_manual(values = c("darkred", "lightskyblue")) +
scale_colour_manual(values = c("red", "blue")) +
theme(panel.background = element_blank())
treat_sig %>%
dplyr::filter(FDR < 0.05, Treatment == "R5020") %>%
mutate(status = ifelse(Estimate > 0, "Activated", "Inhibited")) %>%
plot_gs2gene(
gsTopology = gsTopology,
colorGsBy = "status",
geneFC = top500_FC,
mapEntrezID = entrez2name,
gsNameSize = 3,
filterGeneBy = 0
) +
scale_fill_manual(values = c("darkred", "lightskyblue")) +
scale_colour_manual(values = c("red", "blue")) +
theme(panel.background = element_blank())
weightedFC$weighted_logFC %>%
.[, str_detect(colnames(.), "E2", negate = TRUE)]
check()
check()
use_package("patchwork", type = "Suggests")
use_package("colorspace", type = "Suggests")
build_vignettes()
check()
BiocCheck::BiocCheck()
document()
